version: '3.8'

services:
  database:
    container_name: db_postgres
    image: postgres:15.2-alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "pswd"
      POSTGRES_DB: "test"
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
#      Инициализация бд
#      - ./init_db. Init Database:/docker-entrypoint-initdb.d
#      монтируем папку для хранения данных на хосте из контейнера
      - ./pg_data:/var/lib/postgresql/data/pgdata
#      - ./postgresql.conf:/var/lib/postgresql/data/postgresql.conf
    expose:
      - 5000
    restart: on-failure
    networks:
      my_network:

  flask:
    container_name: app_flask
    build: ./backend
    command: gunicorn --bind 0.0.0.0:5000 app:app
#    command: python app.py run -h 0.0.0.0
    working_dir: /backend
    restart: on-failure
    ports:
      - 5000:5000
    env_file:
      - ./.env
    environment:
      POSTGRES_HOST: database
#      имя контейнера://пользователь:пароль@имя хоста:порт/название базы
    volumes:
      - ./backend/:/backend
    depends_on:
      - database
    networks:
      my_network:
        aliases:
          - flask_app

  nginx:

    build: ./nginx

    container_name: nginx
    expose:
      - 80
    depends_on:
      - flask

networks:
  my_network:


#    driver: bridge

#  nginx:
#    image: nginx:1.17-alpine
#    container_name: nginx
#    volumes:
##      - ./nginx_default.conf:/etc/nginx/conf.d/nginx_default.conf
#      - /static:/home/static
#    ports:
#      - 80:80
#    depends_on:
#      - flask





